#ifndef ARCH_IA32_KEYBOARD_H
#define ARCH_IA32_KEYBOARD_H

#include "../../sys/config.h"

#ifdef HW_KEYBOARD_ENABLED

#include "lowlevel.h"
#include "video.h"

#define KEYBOARD_BUFFER_SIZE 50
#define KEYBOARD_BUFFER_MAX  (KEYBOARD_BUFFER_SIZE-1)

/* standard ascii code table */

char ascii_table [89][8] =
     {
          /* shft  ctrl  alt   num   cps   shcps shnum */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
     { 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 },  /* ESC */
     { 0x31, 0x31, 0x00, 0x00, 0x31, 0x31, 0x31, 0x21 },  /* 1 ! */
     { 0x32, 0x40, 0x00, 0x00, 0x32, 0x32, 0x32, 0x32 },  /* 2 @ */
     { 0x33, 0x23, 0x00, 0x00, 0x33, 0x33, 0x23, 0x23 },  /* 3 # */
     { 0x34, 0x24, 0x00, 0x00, 0x34, 0x34, 0x24, 0x24 },  /* 4 $  SCAN CODE: 5 */
     { 0x35, 0x25, 0x00, 0x00, 0x35, 0x35, 0x25, 0x25 },  /* 5 % */
     { 0x36, 0x5e, 0x1e, 0x00, 0x36, 0x36, 0x5e, 0x5e },  /* 6 ^ */
     { 0x37, 0x26, 0x00, 0x00, 0x37, 0x37, 0x26, 0x26 },  /* 7 & */
     { 0x38, 0x2a, 0x00, 0x00, 0x38, 0x38, 0x2a, 0x2a },  /* 8 * */
     { 0x39, 0x28, 0x00, 0x00, 0x39, 0x39, 0x28, 0x28 },  /* 9 (  SCAN CODE: 10 */
     { 0x30, 0x29, 0x00, 0x00, 0x30, 0x30, 0x29, 0x29 },  /* 0 ) */
     { 0x2d, 0x5f, 0x00, 0x00, 0x2d, 0x2d, 0x5f, 0x5f },  /* - _ */
     { 0x3d, 0x2b, 0x00, 0x00, 0x3d, 0x3d, 0x2b, 0x2b },  /* = + */
     { 0x08, 0x08, 0x7f, 0x00, 0x08, 0x08, 0x08, 0x08 },  /* backspace */
     { 0x09, 0x00, 0x00, 0x00, 0x09, 0x09, 0x00, 0x00 },  /* Tab  SCAN CODE: 15 */
     { 0x71, 0x51, 0x11, 0x00, 0x71, 0x51, 0x51, 0x71 },  /* Q */
     { 0x77, 0x57, 0x17, 0x00, 0x77, 0x57, 0x57, 0x77 },  /* W */
     { 0x65, 0x45, 0x05, 0x00, 0x65, 0x45, 0x45, 0x65 },  /* E */
     { 0x72, 0x52, 0x12, 0x00, 0x72, 0x52, 0x52, 0x72 },  /* R */
     { 0x74, 0x54, 0x14, 0x00, 0x74, 0x54, 0x54, 0x74 },  /* T  SCAN CODE: 20 */
     { 0x79, 0x59, 0x19, 0x00, 0x79, 0x59, 0x79, 0x59 },  /* Y */
     { 0x75, 0x55, 0x15, 0x00, 0x75, 0x55, 0x75, 0x55 },  /* U */
     { 0x69, 0x49, 0x09, 0x00, 0x69, 0x49, 0x69, 0x49 },  /* I */
     { 0x6f, 0x4f, 0x0f, 0x00, 0x6f, 0x4f, 0x6f, 0x4f },  /* O */
     { 0x70, 0x50, 0x10, 0x00, 0x70, 0x50, 0x70, 0x50 },  /* P  SCAN CODE: 25 */
     { 0x5b, 0x7b, 0x1b, 0x00, 0x5b, 0x5b, 0x7b, 0x7b },  /* [ { */
     { 0x5d, 0x7d, 0x1d, 0x00, 0x5d, 0x5d, 0x7d, 0x7d },  /* ] }  // */
     { '\n', '\n', '\n', 0x00, '\n', '\n', '\n', '\n' },  /* enter */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* ctrl */
     { 0x61, 0x41, 0x01, 0x00, 0x61, 0x41, 0x61, 0x41 },  /* A  SCAN CODE: 30 */
     { 0x73, 0x53, 0x13, 0x00, 0x73, 0x53, 0x73, 0x53 },  /* S */
     { 0x64, 0x44, 0x04, 0x00, 0x64, 0x44, 0x64, 0x44 },  /* D */
     { 0x66, 0x46, 0x06, 0x00, 0x66, 0x46, 0x66, 0x46 },  /* F */
     { 0x67, 0x47, 0x07, 0x00, 0x67, 0x47, 0x67, 0x47 },  /* G */
     { 0x68, 0x48, 0x08, 0x00, 0x68, 0x48, 0x68, 0x48 },  /* H  SCAN CODE: 35 */
     { 0x6a, 0x4a, 0x0a, 0x00, 0x6a, 0x4a, 0x6a, 0x4a },  /* J */
     { 0x6b, 0x4b, 0x0b, 0x00, 0x6b, 0x4b, 0x6b, 0x4b },  /* K */
     { 0x6c, 0x4c, 0x0c, 0x00, 0x6c, 0x4c, 0x6c, 0x4c },  /* L */
     { 0x3b, 0x3a, 0x00, 0x00, 0x3b, 0x3b, 0x3a, 0x3a },  /* ; : */
     { 0x27, 0x22, 0x00, 0x00, 0x27, 0x27, 0x22, 0x22 },  /* ' "  SCAN CODE: 40 */
     { 0x60, 0x7e, 0x00, 0x00, 0x60, 0x60, 0x7e, 0x7e },  /* ` ~ */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* LShift */
     { 0x5c, 0x7c, 0x1c, 0x00, 0x5c, 0x5c, 0x7c, 0x7c },  /* \ | */
     { 0x7a, 0x5a, 0x1a, 0x00, 0x7a, 0x5a, 0x7a, 0x5a },  /* Z */
     { 0x78, 0x58, 0x18, 0x00, 0x78, 0x58, 0x78, 0x58 },  /* X  SCAN CODE: 45 */
     { 0x63, 0x43, 0x03, 0x00, 0x63, 0x43, 0x63, 0x43 },  /* C */
     { 0x76, 0x56, 0x16, 0x00, 0x76, 0x56, 0x76, 0x56 },  /* V */
     { 0x62, 0x42, 0x02, 0x00, 0x62, 0x42, 0x62, 0x42 },  /* B */
     { 0x6e, 0x4e, 0x0e, 0x00, 0x6e, 0x4e, 0x6e, 0x4e },  /* N */
     { 0x6d, 0x4d, 0x0d, 0x00, 0x6d, 0x4d, 0x6d, 0x4d },  /* M  SCAN CODE: 50 */
     { 0x2c, 0x3c, 0x00, 0x00, 0x2c, 0x2c, 0x3c, 0x3c },  /* , < */
     { 0x2e, 0x3e, 0x00, 0x00, 0x2e, 0x2e, 0x3e, 0x3e },  /* . > */
     { 0x2f, 0x3f, 0x00, 0x00, 0x2f, 0x2f, 0x3f, 0x3f },  /* / ? */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* RShift */
     { 0x2a, 0x00, 0x10, 0x00, 0x2a, 0x2a, 0x00, 0x00 },  /* * Print Screen  SCAN CODE: 55 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* alt */
     { 0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20 },  /* space */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* caps lock */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F1 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F2  SCAN CODE: 60 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F3 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F4 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F5 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F6 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F7  SCAN CODE: 65 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F8 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F9 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F10 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* num lock */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* scroll lock  SCAN CODE: 70 */
     { 0x00, 0x37, 0x00, 0x00, 0x37, 0x00, 0x37, 0x00 },  /* home */
     { 0x00, 0x38, 0x00, 0x00, 0x38, 0x00, 0x38, 0x00 },  /* up */
     { 0x00, 0x39, 0x00, 0x00, 0x39, 0x00, 0x39, 0x00 },  /* pgup */
     { 0x2d, 0x2d, 0x00, 0x00, 0x2d, 0x2d, 0x2d, 0x2d },  /* - */
     { 0x00, 0x34, 0x00, 0x00, 0x34, 0x00, 0x34, 0x00 },  /* left  SCAN CODE: 75 */
     { 0x00, 0x35, 0x00, 0x00, 0x35, 0x00, 0x35, 0x00 },  /* center */
     { 0x00, 0x36, 0x00, 0x00, 0x36, 0x00, 0x36, 0x00 },  /* right */
     { 0x2b, 0x2b, 0x00, 0x00, 0x2b, 0x2b, 0x2b, 0x2b },  /* + */
     { 0x00, 0x31, 0x00, 0x00, 0x31, 0x00, 0x31, 0x00 },  /* end */
     { 0x00, 0x32, 0x00, 0x00, 0x32, 0x00, 0x32, 0x00 },  /* down  SCAN CODE: 80 */
     { 0x00, 0x33, 0x00, 0x00, 0x33, 0x00, 0x33, 0x00 },  /* pgdn */
     { 0x00, 0x30, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00 },  /* ins */
     { 0x00, 0x2e, 0x00, 0x00, 0x2e, 0x00, 0x2e, 0x00 },  /* del */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /*  -- */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /*  --  SCAN CODE: 85 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /*  -- */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  /* F11 */
     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }   /* F12 */
     };

u8 keyboard_buffer[KEYBOARD_BUFFER_SIZE];	/* keyboard buffer */
u8 keyboard_tail = 0, keyboard_head = 0;	/* keyboard buffer variables */

/* read one element from buffer */
int getch();

/* keyboard interrupt handler */
void int_handler_0x29();

#endif

#endif
